trigger:
  branches:
    include:
    - master

variables:
#- group: VoterAppSecrets  
  # Container registry service connection established during pipeline creation
- name: dockerRegistryServiceConnection 
  value: '621a834f-49c3-4f4e-a151-fa59b0924954'
- name: imageRepository 
  value: 'votingappbaseimage'
- name: containerRegistry 
  value: 'forresterdemo.azurecr.io'
- name: dockerfilePath 
  value: 'Dockerfile-base'
- name: tag 
  value: '$(Build.BuildId)'

  # Agent VM image name
- name: vmImageName 
  value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry      
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)        
        containerRegistry: $(dockerRegistryServiceConnection)      
        tags: |
          stable
    
  - job: Test
    dependsOn: Build
    displayName: Run tests
    variables: { agent.disablelogplugin.TestResultLogPlugin: 'false' }
    pool:
      vmImage: $(vmImageName)
    steps:  
    - task: ContainerStructureTest@0
      displayName: 'Container Structure Test '
      inputs:
        dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)        
        configFile: tests/FileExistenceTest.yml
        testRunTitle: 'File Existence test'
        tag: stable
        failTaskOnFailedTests: false